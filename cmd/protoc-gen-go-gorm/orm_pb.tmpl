
import (
	{{ range .Imports -}}
	"{{ . }}"
	{{ end }}

	"github.com/ml444/gkit/dbx"
)

{{ range .Commons -}}
{{ . }}
{{ end -}}

{{ range .Messages }}
	{{ if .Opts.TableName }}
func (x *{{ .Name }}) TableName() string {
	return "{{ .Opts.TableName }}"
}


func (x *{{ .Name }}) ToORM() dbx.ITModel {
	return &T{{ .Name }}{
{{ range .Fields -}}
    {{ if eq .NewType .OldType -}}
        {{ .FieldName }}: x.{{ .FieldName -}},
    {{ else -}}
        {{ .FieldName }}: {{ .NewType }}(x.{{ .FieldName -}}),
    {{ end -}}
{{ end }}
	}
}

func (x *T{{ .Name }}) TableName() string {
	return "{{ .Opts.TableName }}"
}
	{{ end }}

type T{{ .Name }} struct {
	{{ range .Fields }}
	{{- .FieldName }} {{ .NewType }} `{{ .ORMTag }}`
	{{ end }}
}
    {{ if gt (len .NeedGenFuncFields) 0 }}
        {{- $ModelName := .Name }}
        {{- range .NeedGenFuncFields }}
func (x *T{{ $ModelName }}) Get{{.FieldName}}() {{.NewType }} {
	return x.{{.FieldName}}
}
        {{- end }}
    {{- end}}
func (x *T{{ .Name }}) ToSource() dbx.IModel {
	return &{{ .Name }}{
	    {{ range .Fields -}}
	    {{ if eq .NewType .OldType -}}
        {{ .FieldName }}: x.{{ .FieldName -}},
        {{ else -}}
        {{ .FieldName }}: {{ .OldType }}(x.{{ .FieldName -}}),
        {{ end -}}
        {{ end }}
	}
}
{{ $existSerializationField := gt (len .SerializeFields) 0 }}
func (x *T{{ .Name }}) ExistSerializationField() bool {
	{{- if $existSerializationField }}
	return true
    {{- else }}
	return false
    {{ end -}}
}

func (x *T{{ .Name }}) ForceTModel() bool {
		{{ if or .ForceORM $existSerializationField }}
	return true
        {{- else }}
	return false
        {{ end -}}
}

{{- $modelName := .Name }}
{{- if gt (len .Opts.IndexClauses) 0 }}
{{ range .Opts.IndexClauses -}}
func (x *T{{ $modelName }}) {{ .ToFuncName }}() clause.Expression {
	return {{ .ToString }}
}
{{ end -}}
{{ end }}

	{{ range .SerializeFields -}}
		{{ if .SerializerName }}
			{{ render .SerializerName . }}
		{{ end }}
	{{ end }}
{{ end }}
