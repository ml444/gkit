
import (
	{{ range .Imports -}}
	"{{ . }}"
	{{ end }}
)

{{ range .Commons -}}
{{ . }}
{{ end -}}

{{ range .Messages }}
	{{ if .Opts.TableName }}
func (x *{{ .Name }}) TableName() string {
	return "{{ .Opts.TableName }}"
}
	{{ end }}

type T{{ .Name }} struct {
	{{ range .Fields }}
	{{ .FieldName }} {{ .NewType }} {{ .ORMTag -}}
	{{ end }}
}

func (x *T{{ .Name }}) ToSource() *{{ .Name }} {
	return &{{ .Name }}{
	    {{ range .Fields -}}
	    {{ if eq .NewType .OldType -}}
        {{ .FieldName }}: x.{{ .FieldName -}},
        {{ else -}}
        {{ .FieldName }}: {{ .OldType }}(x.{{ .FieldName -}}),
        {{ end -}}
        {{ end }}
	}
}

func (x *{{ .Name }}) ToORM() *T{{ .Name }} {
	return &T{{ .Name }}{
	    {{ range .Fields -}}
	    {{ if eq .NewType .OldType -}}
        {{ .FieldName }}: x.{{ .FieldName -}},
        {{ else -}}
        {{ .FieldName }}: {{ .NewType }}(x.{{ .FieldName -}}),
        {{ end -}}
        {{ end }}
	}
}

{{ $modelName := .Name }}
{{ if gt (len .Opts.IndexClauses) 0 }}
{{ range .Opts.IndexClauses -}}
func (x *T{{ $modelName }}) {{ .ToFuncName }}() clause.Expression {
	return {{ .ToString }}
}
{{ end -}}
{{ end }}

	{{ range .SerializeFields -}}
		{{ if .SerializerName }}
			{{ render .SerializerName . }}
		{{ end }}
	{{ end }}
{{ end }}
